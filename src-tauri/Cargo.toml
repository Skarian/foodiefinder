[package]
name = "app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
license = ""
repository = ""
default-run = "app"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.3.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.3.0", features = ["protocol-asset", "shell-all"] }
reqwest = { version = "0.11", features = ["json"] }
thiserror = "1.0"
ts-rs = "6.1"
http-cache-reqwest = "0.10.0"
reqwest-middleware = "0.2.2"
maplit = "1.0.2"
scraper = "0.17"
url = "2.4.0"
psl = "2"
colored = "2"
futures = "0.3"
rusqlite = { version = "0.29", features = ["bundled"] }
dirs = "5.0"
r2d2 = "0.8"
r2d2_sqlite = "0.22"
dotenv = "0.15"


[dependencies.pyo3]
version = "0.19.1"
features = ["auto-initialize"]

[dependencies.uuid]
version = "1.4.1"
features = [
  "fast-rng", # Use a faster (but still sufficiently random) RNG
]

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

[profile.release]
panic = "abort"   # Strip expensive panic clean-up logic
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
lto = true        # Enables link to optimizations
opt-level = "s"   # Optimize for binary size
strip = true      # Remove debug symbols
